services:
 postgres:
    container_name: db-postgres
    image: postgres:17.5
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - vol_db:/var/lib/postgresql/data
 backend:
    container_name: backend
    build:
      context: ./backend
    environment:
      - SPRING_DATASOURCE_URL=${POSTGRES_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PW}
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - postgres
 frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    restart: always
    volumes:
        - ./frontend:/app
        - /app/node_modules
    depends_on:
      - backend

volumes:
  vol_db:
  frontend: